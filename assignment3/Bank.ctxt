#BlueJ class context
comment0.params=bankName\ bankManager\ interestRate
comment0.target=Bank(java.lang.String,\ java.lang.String,\ double)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Bank.\r\n\ \r\n\ The\ data\ passed\ in\ as\ parameters\ \r\n\ is\ used\ to\ initialise\ the\ instance\ fields\:\r\n\ bankName,\ bankManager\ and\ interestRate.\ \ \r\n\ For\ each\ instance\ field\:\r\n\ \ \ \ \ \#\ the\ data\ passed\ in\ as\ a\ parameter\ is\r\n\ \ \ \ \ validated\ to\ ensure\ that\ it\ conforms\ to\ \r\n\ \ \ \ \ the\ rules\ identified\ above.\r\n\ \ \ \ \ \#\ if\ the\ data\ passed\ in\ is\ valid,\r\n\ \ \ \ \ the\ instance\ field\ is\ updated.\r\n\ \ \ \ \ \#\ if\ the\ data\ passed\ in\ is\ invalid,\ \r\n\ \ \ \ \ a\ default\ value\ is\ given\ to\ the\ instance\ \r\n\ \ \ \ \ field\ and\ a\ message\ is\ printed\ out\ the\ terminal\r\n\ \ \ \ \ \ \ letting\ the\ user\ know\ that\ a\ default\ value\ has\ been\ supplied.\ \ \ \ \ \r\n\ @param\ bankName\ new\ bank\ name\r\n\ @param\ bankManager\ \ new\ bank\ manager's\ name\r\n\ @param\ interestRate\ new\ interest\ rate\r\n
comment1.params=
comment1.target=Bank()
comment1.text=\r\n\ Default\ constructor\ for\ Bank\r\n
comment10.params=nBankAccounts
comment10.target=void\ setBankAccounts(java.util.ArrayList)
comment10.text=\r\n\ Change\ the\ accounts\ list\r\n\ @param\ nBankAccounts\ new\ list\r\n
comment11.params=nAccount
comment11.target=void\ addBankAccount(BankAccount)
comment11.text=\r\n\ Add\ account\ to\ list\r\n\ @param\ nAccount\ new\ account\r\n
comment12.params=location
comment12.target=void\ removeBankAccount(int)
comment12.text=\r\n\ Remove\ account\r\n\ @param\ location\ index\ number\ in\ list\r\n
comment13.params=
comment13.target=java.lang.String\ listBankAccounts()
comment13.text=\r\n\ Show\ accounts\ in\ list\r\n\ @return\ String\ of\ accounts\r\n
comment14.params=maxBalance
comment14.target=java.lang.String\ listAccountsMaxBalance(double)
comment14.text=\r\n\ Get\ accounts\ that\ is\ lower\ than\ a\ given\ balance\r\n\ @param\ maxBalance\ maximum\ balance\r\n\ @return\ string\ of\ accounts\r\n
comment15.params=category
comment15.target=java.lang.String\ listAccountsByCategory(int)
comment15.text=\r\n\ Show\ accounts\ in\ a\ certain\ category\r\n\ @param\ category\ the\ category\r\n\ @return\ string\ of\ accounts\r\n
comment16.params=
comment16.target=double\ averageBankBalance()
comment16.text=\r\n\ Calculate\ the\ average\ bank\ balance\r\n\ @return\ avarage\ bank\ balance\r\n
comment17.params=
comment17.target=BankAccount\ highestBankBalance()
comment17.text=\r\n\ Get\ the\ account\ with\ highest\ bank\ balance\r\n\ @return\ account\ with\ highest\ bank\ balance\r\n
comment18.params=num
comment18.target=double\ toTwoDecimalPlaces(double)
comment18.text=\r\n\ This\ method\ takes\ in\ a\ double\ and\ converts\r\n\ it\ to\ a\ two\ decimal\ place\ double.\ \ \r\n\ This\ newly\ converted\ double\ is\ then\ returned.\r\n
comment19.params=desiredBalance
comment19.target=java.lang.String\ listProjectedPortfolioTimeframe(double)
comment19.text=\r\n\ Create\ a\ string\ that\ list\ each\ account's\:\r\n\ -account\ number\r\n\ -current\ balance\r\n\ -number\ of\ years\ to\ reach\ the\ desired\ balance\r\n\ @param\ desiredBalance\ desired\ balance\ to\ reach\ \r\n\ @return\ string\r\n
comment2.params=
comment2.target=java.lang.String\ getBankName()
comment2.text=\r\n\ @return\ the\ bank\ name.\r\n
comment20.params=numberOfYears
comment20.target=java.lang.String\ listProjectedPortfolioBalance(int)
comment20.text=\r\n\ Create\ a\ string\ that\ list\ each\ account's\:\r\n\ -account\ number\r\n\ -current\ balance\r\n\ -balance\ after\ a\ number\ of\ years\r\n\ @param\ numberOfYears\ number\ of\ years\ \r\n\ @return\ string\r\n
comment3.params=nbankName
comment3.target=void\ setBankName(java.lang.String)
comment3.text=\r\n\ This\ setter\ updates\ the\ instance\ field,\ bankName,\ based\ on\ the\ rules\ \r\n\ defined\ above.\r\n\ @param\ nbankName\ new\ bank\ name\r\n
comment4.params=
comment4.target=java.lang.String\ getBankManager()
comment4.text=\r\n\ @return\ the\ bank\ manager's\ name.\r\n
comment5.params=nbankManager
comment5.target=void\ setBankManager(java.lang.String)
comment5.text=\r\n\ This\ setter\ updates\ the\ instance\ field,\ bankManager,\ based\ on\ \r\n\ the\ rules\ defined\ above.\r\n\ @param\ nbankManager\ new\ bank\ manager's\ name\r\n
comment6.params=
comment6.target=double\ getInterestRate()
comment6.text=\r\n\ @return\ the\ interest\ rate\r\n
comment7.params=nInterestRate
comment7.target=void\ setInterestRate(double)
comment7.text=\r\n\ This\ setter\ updates\ the\ instance\ field,\ interestRate,\ \r\n\ based\ on\ the\ rules\ defined\ above.\r\n\ @param\ nInterestRate\ new\ interest\ rate\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ @return\ the\ String\ version\ of\ the\ bank\ object.\ \ \r\n\ The\ returned\ String\ contains\ labels\ for\ each\ of\ the\ \r\n\ instance\ fields\ and\ is\ formatted\ like\ so\:\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ Bank\ Name\:\ AIB\r\n\ \ \ \ \ \ \ \ \ Bank\ Manager\:\ \ Joe\ Money\r\n\ \ \ \ \ \ \ \ \ Interest\ Rate\:\ 3\ \ \r\n
comment9.params=
comment9.target=java.util.ArrayList\ getBankAccounts()
comment9.text=\r\n\ Get\ accounts\ list\r\n\ @return\ ArrayList\ of\ bankAccounts\r\n
numComments=21
